{% if reviews %}
    {% for key, review in reviews %}
            <div class="card card-review  bg-transparent" data-rating="{{review.rating}}" data-time="{{ review.created_at }}" >
                    <div class="card-body">
                            <div class="d-flex">
                                    <span class="icon-account_circle">
                                        <span class="d-none">{{ review.customer.name }}</span>
                                    </span>
                                    <div class="card-name">
                                            <p class="card-name-customer">{{ review.customer.name }}</p>
                                            <div class="d-flex card-rate-comment">
                                                {% include 'rating-stars.twig' with {'rating' : review.rating } %}
                                            </div>
                                    </div>
                                    <div class="card-date user-review-date" data-time-ago-date="{{ review.created_at }}">    
                                    </div>
                            </div>
                            <div class="card-paragraph text-justify mt-2 user-review-text">{{ review.comment | raw }}</div>
                            {% if review.images %}
                            <div class="d-flex review-images-container mt-3 ">
                                {% for ikey, image in review.images %}
                                        <img src="{{ image.path }}" attr-index={{ ikey }} />
                                {% endfor %}
                            </div>
                            {% endif %}
                            {% if review.reply %}
                            <div class="review-reply-card mt-4">
                                <div class="d-flex align-items-center">
                                    <span class="icon-account_circle">
                                        <img src={{ store.logo }} />
                                    </span>
                                    <div class="card-name">
                                            <p class="card-name-customer">{{ store.name }}</p>
                                    </div>
                                </div>
                                <div class="card-paragraph text-justify mt-2 user-review-text">{{ review.reply.text | raw }}</div>
                                {% if review.reply.images %}
                                <div class="d-flex review-images-container mt-3 ">
                                        {% for ikey, image in review.reply.images %}
                                                <img src="{{ image.path }}" attr-index={{ ikey }} />
                                        {% endfor %}
                                </div>
                                {% endif %}
                            </div>
                            {% endif %}
                    </div>
            </div>
    {% endfor %}

<script>

function toggleSortMenu() {
    const sortContainer = document.querySelector('.sort-container');
    const menu = sortContainer.querySelector('.sort-dropdown-menu');
    const button = sortContainer.querySelector('.sort-button');

    menu.classList.toggle('hidden');
    
    button.classList.toggle('active', !menu.classList.contains('hidden'));
}

document.addEventListener('click', function(event) {
    const sortContainer = document.querySelector('.sort-container');
    const menu = sortContainer.querySelector('.sort-dropdown-menu');
    const button = sortContainer.querySelector('.sort-button');

    if (!menu.classList.contains('hidden') && !sortContainer.contains(event.target)) {
        menu.classList.add('hidden');
        button.classList.remove('active');
    }
});


function sortReviews(element, sortBy, order) {
    const currentOptionSpan = document.getElementById('current-sort-option');
    currentOptionSpan.textContent = element.textContent;

    const menu = element.closest('.sort-dropdown-menu');
    const button = element.closest('.sort-container').querySelector('.sort-button');
    menu.classList.add('hidden');
    button.classList.remove('active');
    
    // ج. الحصول على حاوية المراجعات (comment-section) وجميع المراجعات
    // (يجب أن يكون comment-section هو العنصر الأب المباشر لكل المراجعات)
    const container = document.querySelector('.comment-section');
    const reviews = Array.from(container.querySelectorAll('.card-review'));

    // د. دالة المقارنة لفرز التعليقات
    reviews.sort((a, b) => {
        let valA, valB;

        if (sortBy === 'date') {
            valA = new Date(a.getAttribute('data-time')).getTime();
            valB = new Date(b.getAttribute('data-time')).getTime();
        } else if (sortBy === 'rating') {
            valA = parseInt(a.getAttribute('data-rating'));
            valB = parseInt(b.getAttribute('data-rating'));
        }
        
        if (order === 'asc') {
            return valA > valB ? 1 : -1;
        } else { // 'desc'
            return valA < valB ? 1 : -1;
        }
    });

    reviews.forEach(review => {
        container.appendChild(review);
    });
}


$('.card-review .icon-account_circle').each(function() {
        var name =  $( 'span', this ).text();
        $('span', this).text(name.substring(0, 1));
        $( 'span', this ).removeClass( 'd-none' );

});

$('.card-review .review-images-container img').on( "click", function() {
        var parent = $( this ).parent();
        var index = $( this ).attr('attr-index');
        var images = []
        $('img', parent).each(function(idx, itm) {
                images.push($(itm).attr('src'));
        });        
        openPhotoSwiper(images, index);
});

</script>
{% endif %}
