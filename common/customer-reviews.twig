{% if reviews %}
    {% for key, review in reviews %}
            <div class="card card-review  bg-transparent" data-rating="{{review.rating}}" data-time="{{ review.created_at }}" >
                    <div class="card-body">
                            <div class="d-flex">

                                    <span class="icon-account_circle">
                                        <span class="d-none">{{ review.customer.name }}</span>
                                    </span>
                                    <div class="card-name">
                                            <p class="card-name-customer">{{ review.customer.name }}</p>
                                            <div class="d-flex card-rate-comment">
                                                {% include 'rating-stars.twig' with {'rating' : review.rating } %}
                                            </div>
                                    </div>
                                    <div class="card-date user-review-date" ago-date="{{ review.created_at }}">
{{ review.created_at|split(' ')[0]|split('-')[2] }}/{{ review.created_at|split(' ')[0]|split('-')[1] }}/{{ review.created_at|split(' ')[0]|split('-')[0] }}

                                    </div>
                            </div>
                            <div class="card-paragraph text-justify mt-2 user-review-text">{{ review.comment | raw }}</div>
                            {% if review.images %}
                            <div class="d-flex review-images-container mt-3 ">
                                {% for ikey, image in review.images %}
                                        <img src="{{ image.path }}" attr-index={{ ikey }} />
                                {% endfor %}
                            </div>
                            {% endif %}
                            {% if review.reply %}
                            <div class="review-reply-card mt-4">
                                <div class="d-flex align-items-center">
                                    <span class="icon-account_circle">
                                        <img src={{ store.logo }} />
                                    </span>
                                    <div class="card-name">
                                            <p class="card-name-customer">{{ store.name }}</p>
                                    </div>
                                </div>
                                <div class="card-paragraph text-justify mt-2 user-review-text">{{ review.reply.text | raw }}</div>
                                {% if review.reply.images %}
                                <div class="d-flex review-images-container mt-3 ">
                                        {% for ikey, image in review.reply.images %}
                                                <img src="{{ image.path }}" attr-index={{ ikey }} />
                                        {% endfor %}
                                </div>
                                {% endif %}
                            </div>
                            {% endif %}
                    </div>
            </div>
    {% endfor %}

<script>

function sortReviews(element, sortBy, order) {
    // تحديث النص الحالي
    const currentOptionSpan = document.getElementById('current-sort-option');
    currentOptionSpan.textContent = element.textContent;

    // إغلاق القائمة المنسدلة (Bootstrap يديرها تلقائياً، لكن نغلقها يدويًا في حال ما كانت تعمل تلقائيًا)
    const dropdownMenu = element.closest('.dropdown-menu');
    const dropdown = element.closest('.dropdown');
    const toggleButton = dropdown.querySelector('[data-toggle="dropdown"]');
    const bootstrapDropdown = bootstrap.Dropdown.getInstance(toggleButton);

    if (bootstrapDropdown) {
        bootstrapDropdown.hide();
    }

    // الحصول على المراجعات
    const container = document.querySelector('.comment-section');
    const reviews = Array.from(container.querySelectorAll('.card-review'));

    // الفرز
    reviews.sort((a, b) => {
        let valA, valB;

        if (sortBy === 'date') {
            valA = new Date(a.getAttribute('data-time')).getTime();
            valB = new Date(b.getAttribute('data-time')).getTime();
        } else if (sortBy === 'rating') {
            valA = parseInt(a.getAttribute('data-rating'));
            valB = parseInt(b.getAttribute('data-rating'));
        }

        return order === 'asc' ? valA - valB : valB - valA;
    });

    // إعادة الترتيب داخل الـ DOM
    reviews.forEach(review => container.appendChild(review));
}

$('.card-review .icon-account_circle').each(function() {
        var name =  $( 'span', this ).text();
        $('span', this).text(name.substring(0, 1));
        $( 'span', this ).removeClass( 'd-none' );

});

$('.card-review .review-images-container img').on( "click", function() {
        var parent = $( this ).parent();
        var index = $( this ).attr('attr-index');
        var images = []
        $('img', parent).each(function(idx, itm) {
                images.push($(itm).attr('src'));
        });        
        openPhotoSwiper(images, index);
});

</script>
{% endif %}
