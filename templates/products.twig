{% extends "layout.twig" %}

{% block header %} {{ include('header.twig') }} {% endblock %}

{% block top_links %}
	<link rel="stylesheet" type="text/css" href="{{ asset_url ~ 'toastr.min.css' }}"/>
{% endblock %}

{% block main_content %}


    <section class="breadcrumb-section ">
        <nav aria-label="breadcrumb">

            <ol class="breadcrumb">
            <div class="container-sec d-flex flex-wrap">
                <li class="breadcrumb-item" aria-current="page"><a href="/">{{ locals.home_title }}</a></li>
                <li class="breadcrumb-item active " aria-current="page">{{ locals.products_title }}</li>
            </div>

            </ol>

        </nav>
    </section>



     <div class="products-page ">
        
                {# <div class="products-div container-sec">
                    {% for product in products.data %}
                        {% if product.id == products_page_product.id %}
                            
                            {% if product.id == products_page_product.id %}
                                {% include 'product-sec-custom.twig' with {'produc' : product} %} 
                            {% endif %}


                        {% endif %}    
                    {% endfor %}
                   
                </div> #}
                


        <div class="products-container-2">
            {% if  products_page_image %}
                <div class="products-page-image">
                    <img src="{{ products_page_image }}" class="img" alt="image">
                </div>
            {% endif %}
            <div class="product-section">
                  <div class="product-container container-sec " id="product-container"></div>

                </div>
                <div class="products-essentials container-sec" style="background-image:url({{ products_page_backimage }});">
                    <div class="products-essentials-inner" >{{products_page_essentials}}</div>
                </div>

                <div class="products-div container-sec">
                    {% for product in products.data %}

                    <div class="prod-col prod-col-tb">
                        {% include 'product-card.twig' with {'product' : product, 'index': key} %}
                    </div>

                    {% endfor %}
                    
                </div>
             {# {% include 'product-sec-custom.twig' with {'productid' : products_page_product.id} %}  #}
            
                <div class="products-div-slider container-sec">
                    <div class="head-sec">
                        
                            <svg xmlns="http://www.w3.org/2000/svg" class="left" width="50" height="13" viewBox="0 0 50 13" fill="none">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M0.62622 9.91605C1.24767 10.2786 1.26816 10.3384 0.985828 10.9653C0.438158 12.1818 0.565705 12.5809 1.59704 12.8752C2.77664 13.2116 4.71013 12.8431 5.82991 12.0682C6.25399 11.7748 7.22923 11.1344 7.99731 10.6453L9.39384 9.75583C33.9322 9.76198 20.8992 9.74652 50 9.74652L50 9.19254L50 8.63855L30.799 8.63855L23.1563 8.63855L22.1829 6.7683C20.6398 3.80337 18.0783 1.52516 14.9873 0.368438C13.5284 -0.17757 13.2214 -0.131476 13.4099 0.605768C13.746 1.92004 15.2648 4.45619 16.4842 5.739C17.4197 6.72316 18.2692 7.81409 19.7703 8.63235L12.0448 8.63545L9.43457 8.63855L8.25055 7.92967C7.59907 7.53989 6.72531 6.94424 6.30892 6.60609C4.62587 5.24019 0.888301 4.93372 0.707451 6.14695C0.666486 6.42195 0.797763 6.96153 0.999328 7.34622C1.20089 7.7309 1.33915 8.05975 1.30656 8.07681C-0.199591 8.86812 -0.37183 9.33348 0.62622 9.91605ZM5.91463 8.73649C5.11815 8.23968 3.47932 8.08124 2.45753 8.40233C0.757729 8.93659 0.878526 9.50609 2.79479 9.99404C3.64481 10.2105 4.07424 10.2072 4.93427 9.97809C6.39759 9.58787 6.68877 9.21935 5.91463 8.73649ZM2.93165 10.866C2.19405 10.7082 2.01646 10.7433 1.82491 11.0841C1.34054 11.9456 1.53187 12.1843 2.70216 12.1792C3.96392 12.1736 5.45285 11.5975 6.13528 10.851L6.60079 10.3417L6.0189 10.5024C4.33144 10.968 3.73582 11.038 2.93165 10.866ZM6.13528 7.53413C5.45285 6.78758 3.96392 6.21143 2.70216 6.20589C1.79977 6.2019 1.59797 6.27237 1.60356 6.58881C1.61938 7.44815 2.00436 7.71739 2.93398 7.51862C3.73559 7.34711 4.33283 7.41757 6.0189 7.88269L6.60079 8.04335L6.13528 7.53413ZM18.9777 3.6538C17.8639 2.61031 15.3527 1.10436 14.7266 1.10436C14.3419 1.10436 14.4043 1.29847 15.3078 2.91079C15.7622 3.7216 16.598 4.84641 17.1657 5.41015C18.1802 6.4184 20.147 7.75218 20.6188 7.75218C20.751 7.75218 19.9303 6.86358 18.7947 5.77755C17.2313 4.28201 16.7688 3.7072 16.8889 3.40871C17.0197 3.08452 17.4368 3.38367 19.2493 5.10213C20.4603 6.25021 21.4509 7.10955 21.4509 7.01161C21.4509 6.55069 20.0732 4.68044 18.9777 3.6538Z" fill="#383838"/>
                            </svg>
                        <h2 class="title-sec " >{{ locals.our_products }}</h2>
                        
                            <svg class="right" xmlns="http://www.w3.org/2000/svg" width="50" height="13" viewBox="0 0 50 13" fill="none">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M49.3738 9.91605C48.7523 10.2786 48.7318 10.3384 49.0142 10.9653C49.5618 12.1818 49.4343 12.5809 48.403 12.8752C47.2234 13.2116 45.2899 12.8431 44.1701 12.0682C43.746 11.7748 42.7708 11.1344 42.0027 10.6453L40.6062 9.75583C16.0678 9.76198 29.1008 9.74652 -1.42214e-07 9.74652L-1.6643e-07 9.19254L-1.90645e-07 8.63855L19.201 8.63855L26.8437 8.63855L27.8171 6.7683C29.3602 3.80337 31.9217 1.52516 35.0127 0.368438C36.4716 -0.17757 36.7786 -0.131476 36.5901 0.605768C36.254 1.92004 34.7352 4.45619 33.5158 5.739C32.5803 6.72316 31.7308 7.81409 30.2297 8.63235L37.9552 8.63545L40.5654 8.63855L41.7495 7.92967C42.4009 7.53989 43.2747 6.94424 43.6911 6.60609C45.3741 5.24019 49.1117 4.93372 49.2925 6.14695C49.3335 6.42195 49.2022 6.96153 49.0007 7.34622C48.7991 7.7309 48.6609 8.05975 48.6934 8.07681C50.1996 8.86812 50.3718 9.33348 49.3738 9.91605ZM44.0854 8.73649C44.8819 8.23968 46.5207 8.08124 47.5425 8.40233C49.2423 8.93659 49.1215 9.50609 47.2052 9.99404C46.3552 10.2105 45.9258 10.2072 45.0657 9.97809C43.6024 9.58787 43.3112 9.21935 44.0854 8.73649ZM47.0683 10.866C47.8059 10.7082 47.9835 10.7433 48.1751 11.0841C48.6595 11.9456 48.4681 12.1843 47.2978 12.1792C46.0361 12.1736 44.5472 11.5975 43.8647 10.851L43.3992 10.3417L43.9811 10.5024C45.6686 10.968 46.2642 11.038 47.0683 10.866ZM43.8647 7.53413C44.5472 6.78758 46.0361 6.21143 47.2978 6.20589C48.2002 6.2019 48.402 6.27237 48.3964 6.58881C48.3806 7.44815 47.9956 7.71739 47.066 7.51862C46.2644 7.34711 45.6672 7.41757 43.9811 7.88269L43.3992 8.04335L43.8647 7.53413ZM31.0223 3.6538C32.1361 2.61031 34.6473 1.10436 35.2734 1.10436C35.6581 1.10436 35.5957 1.29847 34.6922 2.91079C34.2378 3.7216 33.402 4.84641 32.8343 5.41015C31.8198 6.4184 29.853 7.75218 29.3812 7.75218C29.249 7.75218 30.0697 6.86358 31.2053 5.77755C32.7687 4.28201 33.2312 3.7072 33.1111 3.40871C32.9803 3.08452 32.5632 3.38367 30.7507 5.10213C29.5397 6.25021 28.5491 7.10955 28.5491 7.01161C28.5491 6.55069 29.9268 4.68044 31.0223 3.6538Z" fill="#383838"/>
                        </svg>
                    </div>

                        <div class="products-sliders">
                            {% for product in products.data %}
                                    <div class="prod-col prod-col-tb custom-category-product-item">
                                        {% include 'product-card.twig' with {'product' : product, 'index': key} %} 
                                    </div>
                            {% endfor %}
                        </div>
                    </div>
                

        </div>
    </div>

    {% include 'pagination.twig' with { 'totalPages' : products.last_page , 'currentPage' : products.current_page } %}

{% endblock %}

{% block footer %} {{ include('footer.twig') }} {% endblock %}

{% block footer_scripts %}
    <script type="text/javascript" src="{{ asset_url ~ 'toastr.min.js' }}"></script>
   
 


   <script>
        window.onProductAttributesTriggered = function(){
            $('#products-list').css('opacity', '0.4');
            $('#product-pagination').css('opacity', '0');
        }

        window.onProductAttributesChanged = function(htmlStr){
            var html = $.parseHTML( htmlStr );
            $('#products-list').html($('#products-list', html).html());
            $('#products-list').css('opacity', '1');
            $('#product-filter-count').html($('#product-filter-count', html).html());
            $('#product-filter-count').css('opacity', '1');
            if($('#product-pagination', html).length>0){
                $('#product-pagination').html($('#product-pagination', html).html());
                $('#product-pagination').css('opacity', '1');
            }

        }

        {% if  products.data|length > 0 %}
        document.addEventListener("DOMContentLoaded", function(){
            var productsObj = {{ products.data | json_encode() | raw }}
                window.sendGaProductsViewItemsListEvent('all_products', productsObj);
        });
        {% endif %}

    </script>
    <script>

        document.addEventListener("DOMContentLoaded", function(){
            var arrowNextClass = (window.appDirection === 'ltr') ? 'icon-keyboard_arrow_right': 'icon-keyboard_arrow_left';
            var arrowPrevClass = (window.appDirection === 'ltr') ? 'icon-keyboard_arrow_left' : 'icon-keyboard_arrow_right';
                $('.products-sliders').slick({
                    slidesToShow: 4,
                    slidesToScroll: 1,
                    infinite: false,
                    autoplay: false,
                    arrows: false,
                    dots: false,
                    rtl: !(window.appDirection === 'ltr'),
                    nextArrow:'<button class="slick-next slick-arrow" aria-label="Next" type="button" style=""><span class="'+arrowNextClass+'"></span></button>',
                    prevArrow:'<button class="slick-prev slick-arrow" aria-label="Previous" type="button" style=""><span class="'+arrowPrevClass+'"></span></button>',
                    responsive: [
                        {
                            breakpoint: 9999,
                            settings: "unslick"
                        },
                        {
                            breakpoint: 768,
                            settings: {
                                slidesToShow: 2,
                                slidesToScroll: 1
                            }
                        },
                        {
                            breakpoint: 510,
                            settings: {
                                slidesToShow: 1.2,
                                slidesToScroll: 1 ,
                                centerMode: true,
                                centerPadding: '0px',
                                
                            }
                        }
                    ]
                });
            
        });
    </script>
//      <script>
//      const productId = '{{products_page_product.id}}';
//  zid.store.product.fetch(productId)
//    .then(function(response) {
//      console.log(response);
//      if (response.status === 'success' && response.data && response.data.product) {
//        const product = response.data.product;
//        console.log(product); // ← ده الـ object الكامل للمنتج
//      } else {
//        console.error('تعذر تحميل بيانات المنتج.');
//      }
//    })
//    .catch(function(err) {
//      console.error('API Error:', err);
//    });
//      </script>
// <script>
//   const productId = '{{ products_page_product.id }}';

// // Function to build product HTML template
// function buildProductTemplate(product, locals, storeConfig) {
//   const selectedProduct = product.selected_product || product;
//   const firstImage = selectedProduct.media?.[0] || {};
//   const hasWishlist = storeConfig?.is_wishlist_enabled || false;
  
//   return `
//     <section class="product products-details-page">
//       <div class="products-details">
//         <div class="img-side">
//           ${hasWishlist ? `
//             <span class="add-to-wishlist" data-wishlist-id="${product.id}">
//               <a zid-visible-customer="true" class="icon-heart-mask" onclick="addToWishlist(this, '${product.id}')"></a>      
//               <a zid-visible-guest="true" class="icon-heart-mask" href="/auth/login?redirect_to=${window.location.pathname}"></a>
//               <img class="loader d-none" src="${storeConfig.asset_url}spinner.gif" width="20" height="20"/>
//             </span>
//           ` : ''}
          
//           <!--GALLERY-->
//           <div class="image-inner">
//             <div class="image-inner-inner">
//               <a class="image-link" style="display:block; width: 100%; height: 100%;">
//                 <img src="${firstImage.image?.full_size || ''}" class="carousel-img" alt="${firstImage.alt_text || product.name}">
//                 ${firstImage.provider && firstImage.link ? `
//                   <img id="main-video-icon"
//                     class="play-icon"
//                     src="${storeConfig.assetUrl}video-play.svg"
//                     alt="play"
//                     width="25"
//                     onclick="showIframe(this, '${firstImage.link}')"
//                   />
//                 ` : ''}
//               </a>
//               ${firstImage.provider && firstImage.link ? `
//                 <div class="iframe-video pt-1 d-none">
//                   <a id="iframe-close-btn"
//                     type="button"
//                     class="text-white btn btn-none grow"
//                     onclick="hideIframe(this)">
//                     X
//                   </a>
//                   <iframe
//                     width="100%"
//                     height="100%"
//                     src=""
//                     frameborder="0"
//                     allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
//                     allowfullscreen
//                     style="max-width: 100%">
//                   </iframe>
//                 </div>
//               ` : ''}
//             </div>
//           </div>
//         </div>

//         <div class="details-side col-product-info ${selectedProduct.media?.length <= 1 ? 'col-product-info-single-image' : ''}">
//           <div class="product-details-header">
//             <a class="product-title" href="${product.html_url}">${product.name}</a>
            
//             <div class="d-flex price-box align-center">
//               <div class="d-flex">
//                 <h2 class="product-formatted-price">
//                   ${selectedProduct.formatted_sale_price || selectedProduct.formatted_price}
//                 </h2>
//                 ${selectedProduct.formatted_sale_price ? `
//                   <p>
//                     <span class="product-formatted-price-discount">
//                       &nbsp;&nbsp;${locals.product_discount}&nbsp;${selectedProduct.discount_percentage}%
//                     </span>
//                     <del class="product-formatted-price-old">
//                       ${selectedProduct.formatted_price}
//                     </del>
//                   </p>
//                 ` : ''}
//               </div>
//             </div>

//             ${product.short_description ? `
//               <div class="product-short-description">
//                 <label>${locals.description}</label>
//                 <div class="text-short-description">
//                   ${product.short_description}
//                 </div>
//               </div>
//             ` : ''}
//           </div>

//           <form id="product-form">
//             <input id="product-id" type="hidden" value="${selectedProduct.id}">
//             <input id="product-parent-id" type="hidden" value="${product.id}">

//             <div class="size-box">
//               ${product.variants ? `
//                 <div id="product-variants-options" class="product-variants-options">
//                   <!-- Variants will be rendered here -->
//                   ${buildVariantsSelect(product)}
//                 </div>
//               ` : ''}
//             </div>

//             ${selectedProduct.is_infinite || selectedProduct.quantity > 0 ? `
//               <div class="select-quantity-div">
//                 <h4 class="product-title">${locals.product_cart_quantity}</h4>
//                 <div class="form-group">
//                   <div>
//                     <select id="product-quantity" name="quantity" class="select-quantity">
//                       ${buildQuantityOptions(selectedProduct)}
//                     </select>
//                   </div>
//                 </div>
//               </div>
//             ` : ''}
//           </form>

//           <div class="product-buttons ${selectedProduct.out_of_stock ? 'd-none' : 'd-block'}">
//             <div class="align-center btn-add">
//               <button class="btn btn-add-to-cart" type="button" onclick="productAddToCart()">
//                 <img class="add-to-cart-progress d-none" src="${storeConfig.asset_url}spinner.gif" width="25" height="25"/>
//                 <span>${locals.add_to_cart}</span>
//               </button>
//             </div>
//           </div>

//           <div>
//             <span id="product-view-add-to-cart"></span>
//           </div>
//         </div>
//       </div>
//     </section>
//   `;
// }

// // Helper function to build quantity options
// function buildQuantityOptions(selectedProduct) {
//   const maxQuantity = selectedProduct.is_infinite || selectedProduct.quantity > 100 
//     ? 100 
//     : selectedProduct.quantity;
  
//   let options = '';
//   for (let i = 1; i <= maxQuantity; i++) {
//     options += `<option value="${i}" ${i === 1 ? 'selected' : ''}>${i}</option>`;
//   }
//   return options;
// }

// // Helper function to build variants select (simplified)
// function buildVariantsSelect(product) {
//   // هنا تقدر تضيف لوجيك الـ variants بتفصيل أكتر
//   // دي نسخة مبسطة
//   if (!product.variants || product.variants.length === 0) return '';
  
//   // يفضل تستخدم نفس الـ template من product-variant-select.twig
//   return `<div class="variants-placeholder">Variants rendering needed</div>`;
// }

// // Fetch product and render
// zid.store.product.fetch(productId)
//   .then(function(response) {
//     if (response.status === 'success' && response.data && response.data.product) {
//       const product = response.data.product;
      
//       // Get store config and locals (you might need to pass these)
//       const storeConfig = {
//         is_wishlist_enabled: true, // Get from store settings
//         asset_url: window.asset_url || '/assets/',
//         assetUrl: window.assetUrl || function(path) { return '/assets/' + path; }
//       };
      
//       const locals = {
//         description: 'الوصف',
//         product_discount: 'خصم',
//         product_cart_quantity: 'الكمية',
//         add_to_cart: 'أضف للسلة'
//       };

//       // Build and inject HTML
//       const html = buildProductTemplate(product, locals, storeConfig);
//       document.getElementById('product-container').innerHTML = html;

//       // Initialize any required scripts after rendering
//       if (typeof initProductScripts === 'function') {
//         initProductScripts(product);
//       }
//     } else {
//       console.error('تعذر تحميل بيانات المنتج.');
//       document.getElementById('product-container').innerHTML = 
//         '<div class="alert alert-danger">حدث خطأ في تحميل المنتج</div>';
//     }
//   })
//   .catch(function(err) {
//     console.error('API Error:', err);
//     document.getElementById('product-container').innerHTML = 
//       '<div class="alert alert-danger">حدث خطأ في الاتصال بالخادم</div>';
//   });
// </script>
// <script>
//   const productId = '{{ products_page_product.id }}';

// // Function to build product options/variants HTML
// function buildVariantsSelect(product) {
//   if (!product.options || product.options.length === 0) return '';
  
//   let html = '';
  
//   product.options.forEach(option => {
//     html += `
//       <div class="product-option-group mb-3">
//         <label class="product-option-label">${option.name}</label>
//         <div class="product-option-values">
//           ${option.choices.map((choice, index) => {
//             const variant = product.variants.find(v => 
//               v.attributes.some(attr => attr.value === choice)
//             );
//             const isSelected = variant && variant.id === product.selected_product.id;
            
//             return `
//               <div class="product-option-item ${isSelected ? 'selected' : ''}" 
//                    data-variant-id="${variant ? variant.id : ''}"
//                    data-option-value="${choice}"
//                    onclick="selectVariant('${variant ? variant.id : ''}', this)">
//                 ${choice}
//               </div>
//             `;
//           }).join('')}
//         </div>
//       </div>
//     `;
//   });
  
//   return html;
// }

// // Function to build quantity options
// function buildQuantityOptions(selectedProduct) {
//   const maxQuantity = selectedProduct.is_infinite || selectedProduct.quantity > 100 
//     ? 100 
//     : selectedProduct.quantity;
  
//   let options = '';
//   for (let i = 1; i <= maxQuantity; i++) {
//     options += `<option value="${i}" ${i === 1 ? 'selected' : ''}>${i}</option>`;
//   }
//   return options;
// }

// // Function to build product HTML template
// function buildProductTemplate(product, locals, storeConfig) {
//   const selectedProduct = product.selected_product || product;
//   const firstImage = selectedProduct.media?.[0] || selectedProduct.images?.[0] || {};
//   const hasWishlist = storeConfig?.is_wishlist_enabled || false;
  
//   return `
//     <section class="product products-details-page">
//       <div class="products-details">
//         <div class="img-side">
//           ${hasWishlist ? `
//             <span class="add-to-wishlist" data-wishlist-id="${product.id}">
//               <a zid-visible-customer="true" class="icon-heart-mask" onclick="addToWishlist(this, '${product.id}')"></a>      
//               <a zid-visible-guest="true" class="icon-heart-mask" href="/auth/login?redirect_to=${window.location.pathname}"></a>
//               <img class="loader d-none" src="${storeConfig.asset_url}spinner.gif" width="20" height="20"/>
//             </span>
//           ` : ''}
          
//           <div class="image-inner">
//             <div class="image-inner-inner">
//               <a class="image-link" style="display:block; width: 100%; height: 100%;">
//                 <img src="${firstImage.image?.full_size || ''}" 
//                      class="carousel-img" 
//                      alt="${firstImage.alt_text || product.name}"
//                      id="main-product-image">
//                 ${firstImage.provider && firstImage.link ? `
//                   <img id="main-video-icon"
//                     class="play-icon"
//                     src="${storeConfig.assetUrl}video-play.svg"
//                     alt="play"
//                     width="25"
//                     onclick="showIframe(this, '${firstImage.link}')"
//                   />
//                 ` : ''}
//               </a>
//               ${firstImage.provider && firstImage.link ? `
//                 <div class="iframe-video pt-1 d-none">
//                   <a id="iframe-close-btn"
//                     type="button"
//                     class="text-white btn btn-none grow"
//                     onclick="hideIframe(this)">
//                     X
//                   </a>
//                   <iframe
//                     width="100%"
//                     height="100%"
//                     src=""
//                     frameborder="0"
//                     allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
//                     allowfullscreen
//                     style="max-width: 100%">
//                   </iframe>
//                 </div>
//               ` : ''}
//             </div>
//           </div>
//         </div>

//         <div class="details-side col-product-info ${selectedProduct.media?.length <= 1 ? 'col-product-info-single-image' : ''}">
//           <div class="product-details-header">
//             <a class="product-title" href="${product.html_url}">${product.name}</a>
            
//             <div class="d-flex price-box align-center">
//               <div class="d-flex">
//                 <h2 class="product-formatted-price" id="product-price">
//                   ${selectedProduct.formatted_sale_price || selectedProduct.formatted_price}
//                 </h2>
//                 ${selectedProduct.formatted_sale_price ? `
//                   <p>
//                     <span class="product-formatted-price-discount" id="product-discount">
//                       &nbsp;&nbsp;${locals.product_discount}&nbsp;${selectedProduct.discount_percentage}%
//                     </span>
//                     <del class="product-formatted-price-old" id="product-old-price">
//                       ${selectedProduct.formatted_price}
//                     </del>
//                   </p>
//                 ` : ''}
//               </div>
//             </div>

//             ${product.short_description ? `
//               <div class="product-short-description">
//                 <label>${locals.description}</label>
//                 <div class="text-short-description">
//                   ${product.short_description}
//                 </div>
//               </div>
//             ` : ''}
//           </div>

//           <form id="product-form">
//             <input id="product-id" type="hidden" value="${selectedProduct.id}">
//             <input id="product-parent-id" type="hidden" value="${product.id}">

//             <div class="size-box">
//               ${product.options ? `
//                 <div id="product-variants-options" class="product-variants-options">
//                   ${buildVariantsSelect(product)}
//                 </div>
//               ` : ''}
//             </div>

//             ${selectedProduct.is_infinite || selectedProduct.quantity > 0 ? `
//               <div class="select-quantity-div">
//                 <h4 class="product-title">${locals.product_cart_quantity}</h4>
//                 <div class="form-group">
//                   <div>
//                     <select id="product-quantity" name="quantity" class="select-quantity">
//                       ${buildQuantityOptions(selectedProduct)}
//                     </select>
//                   </div>
//                 </div>
//               </div>
//             ` : ''}
//           </form>

//           <div class="product-buttons ${selectedProduct.out_of_stock ? 'd-none' : 'd-block'}">
//             <div class="align-center btn-add">
//               <button class="btn btn-add-to-cart" type="button" onclick="productAddToCart()">
//                 <img class="add-to-cart-progress d-none" src="${storeConfig.asset_url}spinner.gif" width="25" height="25"/>
//                 <span>${locals.add_to_cart}</span>
//               </button>
//             </div>
//           </div>

//           <div>
//             <span id="product-view-add-to-cart"></span>
//           </div>
//         </div>
//       </div>
//     </section>
//   `;
// }

// // Global variable to store product data
// let currentProduct = null;

// // Function to handle variant selection
// window.selectVariant = function(variantId, element) {
//   if (!currentProduct || !variantId) return;
  
//   // Find the selected variant
//   const selectedVariant = currentProduct.variants.find(v => v.id === variantId);
//   if (!selectedVariant) return;
  
//   // Update UI
//   document.querySelectorAll('.product-option-item').forEach(item => {
//     item.classList.remove('selected');
//   });
//   element.classList.add('selected');
  
//   // Update product details
//   document.getElementById('product-id').value = selectedVariant.id;
//   document.getElementById('product-price').textContent = 
//     selectedVariant.formatted_sale_price || selectedVariant.formatted_price;
  
//   if (selectedVariant.formatted_sale_price) {
//     document.getElementById('product-discount').textContent = 
//       `\u00A0\u00A0الخصم\u00A0${selectedVariant.discount_percentage}%`;
//     document.getElementById('product-old-price').textContent = 
//       selectedVariant.formatted_price;
//   }
  
//   // Update main image
//   const mainImage = document.getElementById('main-product-image');
//   if (selectedVariant.media && selectedVariant.media.length > 0) {
//     mainImage.src = selectedVariant.media[0].image.full_size;
//   }
  
//   // Update quantity dropdown
//   const quantitySelect = document.getElementById('product-quantity');
//   if (quantitySelect) {
//     quantitySelect.innerHTML = buildQuantityOptions(selectedVariant);
//   }
  
//   // Update current product
//   currentProduct.selected_product = selectedVariant;
  
//   console.log('Selected variant:', selectedVariant.name);
// };

// // Fetch product and render
// zid.store.product.fetch(productId)
//   .then(function(response) {
//     if (response.status === 'success' && response.data && response.data.product) {
//       const product = response.data.product;
//       currentProduct = product;
      
//       // Get store config and locals
//       const storeConfig = {
//         is_wishlist_enabled: typeof store !== 'undefined' ? store.is_wishlist_enabled : true,
//         asset_url: window.asset_url || '/assets/',
//         assetUrl: window.assetUrl || function(path) { return '/assets/' + path; }
//       };
      
//       const locals = {
//         description: 'الوصف',
//         product_discount: 'خصم',
//         product_cart_quantity: 'الكمية',
//         add_to_cart: 'أضف للسلة'
//       };

//       // Build and inject HTML
//       const html = buildProductTemplate(product, locals, storeConfig);
//       document.getElementById('product-container').innerHTML = html;

//       console.log('Product loaded:', product.name);
//       console.log('Options:', product.options);
//       console.log('Variants:', product.variants);
      
//       // Initialize any required scripts after rendering
//       if (typeof initProductScripts === 'function') {
//         initProductScripts(product);
//       }
//     } else {
//       console.error('تعذر تحميل بيانات المنتج.');
//       document.getElementById('product-container').innerHTML = 
//         '<div class="alert alert-danger">حدث خطأ في تحميل المنتج</div>';
//     }
//   })
//   .catch(function(err) {
//     console.error('API Error:', err);
//     document.getElementById('product-container').innerHTML = 
//       '<div class="alert alert-danger">حدث خطأ في الاتصال بالخادم</div>';
//   });
// </script>
<script>
  const productId = '{{ products_page_product.id }}';

// Global variable to store product data
let currentProduct = null;

// Function to get media for display (prioritize variant images, fallback to parent)
function getProductMedia(product, variant) {
  if (variant && variant.images && variant.images.length > 0) {
    return variant.images;
  }
  if (product.images && product.images.length > 0) {
    return product.images;
  }
  if (product.media && product.media.length > 0) {
    return product.media;
  }
  return [];
}

// Function to build thumbnail gallery
function buildThumbnailGallery(media) {
  if (!media || media.length <= 1) return '';
  
  return `
    <div class="product-thumbnails">
      ${media.map((item, index) => `
        <div class="thumbnail-item ${index === 0 ? 'active' : ''}" 
             onclick="changeMainImage(${index})">
          <img src="${item.image?.thumbnail || item.image?.small || item.image?.full_size || ''}" 
               alt="${item.alt_text || ''}" />
          ${item.provider && item.link ? `
            <div class="video-badge">▶</div>
          ` : ''}
        </div>
      `).join('')}
    </div>
  `;
}

// Function to change main image
window.changeMainImage = function(index) {
  if (!currentProduct) return;
  
  const media = getProductMedia(currentProduct, currentProduct.selected_product);
  const selectedMedia = media[index];
  
  if (!selectedMedia) return;
  
  // Update main image
  const mainImage = document.getElementById('main-product-image');
  const videoIcon = document.getElementById('main-video-icon');
  const iframeContainer = document.querySelector('.iframe-video');
  
  if (mainImage) {
    mainImage.src = selectedMedia.image?.full_size || selectedMedia.image?.large || '';
    mainImage.alt = selectedMedia.alt_text || currentProduct.name;
  }
  
  // Handle video icon
  if (selectedMedia.provider && selectedMedia.link) {
    if (videoIcon) {
      videoIcon.classList.remove('d-none');
      videoIcon.setAttribute('onclick', `showIframe(this, '${selectedMedia.link}')`);
    }
    if (iframeContainer) {
      iframeContainer.classList.remove('d-none');
      iframeContainer.querySelector('iframe').src = '';
    }
  } else {
    if (videoIcon) videoIcon.classList.add('d-none');
    if (iframeContainer) iframeContainer.classList.add('d-none');
  }
  
  // Update active thumbnail
  document.querySelectorAll('.thumbnail-item').forEach((thumb, i) => {
    thumb.classList.toggle('active', i === index);
  });
};

// Function to build product options/variants HTML
function buildVariantsSelect(product) {
  if (!product.options || product.options.length === 0) return '';
  
  let html = '';
  
  product.options.forEach(option => {
    html += `
      <div class="product-option-group mb-3">
        <label class="product-option-label">${option.name}</label>
        <div class="product-option-values">
          ${option.choices.map((choice) => {
            const variant = product.variants.find(v => 
              v.attributes.some(attr => attr.value === choice)
            );
            const isSelected = variant && variant.id === product.selected_product.id;
            
            // Get variant image for preview
            const variantImage = variant && variant.images && variant.images[0] 
              ? variant.images[0].image.thumbnail || variant.images[0].image.small 
              : '';
            
            return `
              <div class="product-option-item ${isSelected ? 'selected' : ''}" 
                   data-variant-id="${variant ? variant.id : ''}"
                   data-option-value="${choice}"
                   onclick="selectVariant('${variant ? variant.id : ''}', this)">
                ${variantImage ? `
                  <img src="${variantImage}" alt="${choice}" class="option-image" />
                ` : ''}
                <span class="option-text">${choice}</span>
              </div>
            `;
          }).join('')}
        </div>
      </div>
    `;
  });
  
  return html;
}

// Function to build quantity options
function buildQuantityOptions(selectedProduct) {
  const maxQuantity = selectedProduct.is_infinite || selectedProduct.quantity > 100 
    ? 100 
    : selectedProduct.quantity;
  
  let options = '';
  for (let i = 1; i <= maxQuantity; i++) {
    options += `<option value="${i}" ${i === 1 ? 'selected' : ''}>${i}</option>`;
  }
  return options;
}

// Function to update gallery
function updateGallery(product, selectedVariant) {
  const imgSide = document.querySelector('.img-side');
  if (!imgSide) return;
  
  const media = getProductMedia(product, selectedVariant);
  const firstImage = media[0] || {};
  
  // Update main image area
  const imageInner = imgSide.querySelector('.image-inner-inner');
  if (imageInner) {
    imageInner.innerHTML = `
      <a class="image-link" style="display:block; width: 100%; height: 100%;">
        <img src="${firstImage.image?.full_size || firstImage.image?.large || ''}" 
             class="carousel-img" 
             alt="${firstImage.alt_text || selectedVariant.name}"
             id="main-product-image">
        ${firstImage.provider && firstImage.link ? `
          <img id="main-video-icon"
            class="play-icon"
            src="${window.assetUrl ? window.assetUrl('video-play.svg') : '/assets/video-play.svg'}"
            alt="play"
            width="25"
            onclick="showIframe(this, '${firstImage.link}')"
          />
        ` : ''}
      </a>
      ${firstImage.provider && firstImage.link ? `
        <div class="iframe-video pt-1 d-none">
          <a id="iframe-close-btn"
            type="button"
            class="text-white btn btn-none grow"
            onclick="hideIframe(this)">
            X
          </a>
          <iframe
            width="100%"
            height="100%"
            src=""
            frameborder="0"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
            allowfullscreen
            style="max-width: 100%">
          </iframe>
        </div>
      ` : ''}
    `;
  }
  
  // Update or create thumbnail gallery
  let thumbnailContainer = imgSide.querySelector('.thumbnail-gallery-container');
  if (!thumbnailContainer) {
    thumbnailContainer = document.createElement('div');
    thumbnailContainer.className = 'thumbnail-gallery-container';
    imgSide.querySelector('.image-inner').appendChild(thumbnailContainer);
  }
  
  thumbnailContainer.innerHTML = buildThumbnailGallery(media);
}

// Function to handle variant selection
window.selectVariant = function(variantId, element) {
  if (!currentProduct || !variantId) return;
  
  // Find the selected variant
  const selectedVariant = currentProduct.variants.find(v => v.id === variantId);
  if (!selectedVariant) return;
  
  // Update UI selection
  document.querySelectorAll('.product-option-item').forEach(item => {
    item.classList.remove('selected');
  });
  element.classList.add('selected');
  
  // Update hidden input
  const productIdInput = document.getElementById('product-id');
  if (productIdInput) {
    productIdInput.value = selectedVariant.id;
  }
  
  // Update price
  const priceElement = document.getElementById('product-price');
  if (priceElement) {
    priceElement.textContent = 
      selectedVariant.formatted_sale_price || selectedVariant.formatted_price;
  }
  
  // Calculate discount percentage
  const discountPercent = selectedVariant.sale_price 
    ? Math.round(((selectedVariant.price - selectedVariant.sale_price) / selectedVariant.price) * 100)
    : 0;
  
  // Update discount and old price
  const discountContainer = document.getElementById('discount-container');
  const discountElement = document.getElementById('product-discount');
  const oldPriceElement = document.getElementById('product-old-price');
  
  if (selectedVariant.formatted_sale_price && discountPercent > 0) {
    if (discountElement) {
      discountElement.textContent = `\u00A0\u00A0خصم\u00A0${discountPercent}%`;
    }
    if (oldPriceElement) {
      oldPriceElement.textContent = selectedVariant.formatted_price;
    }
    if (discountContainer) {
      discountContainer.classList.remove('d-none');
    }
  } else {
    if (discountContainer) {
      discountContainer.classList.add('d-none');
    }
  }
  
  // Update gallery with variant images
  updateGallery(currentProduct, selectedVariant);
  
  // Update quantity dropdown
  const quantitySelect = document.getElementById('product-quantity');
  if (quantitySelect) {
    quantitySelect.innerHTML = buildQuantityOptions(selectedVariant);
  }
  
  // Update stock button visibility
  const productButtons = document.querySelector('.product-buttons');
  if (productButtons) {
    if (selectedVariant.out_of_stock || selectedVariant.quantity <= 0) {
      productButtons.classList.add('d-none');
    } else {
      productButtons.classList.remove('d-none');
    }
  }
  
  // Update current product
  currentProduct.selected_product = selectedVariant;
  
};

// Function to build product HTML template
function buildProductTemplate(product, locals, storeConfig) {
  const selectedProduct = product.selected_product || product;
  
  // Get media for initial display
  const media = getProductMedia(product, selectedProduct);
  const firstImage = media[0] || {};
  
  const hasWishlist = storeConfig?.is_wishlist_enabled || false;
  
  return `
    <section class="product products-details-page">
      <div class="products-details">
        <div class="img-side">
          ${hasWishlist ? `
            <span class="add-to-wishlist" data-wishlist-id="${product.id}">
              <a zid-visible-customer="true" class="icon-heart-mask" onclick="addToWishlist(this, '${product.id}')"></a>      
              <a zid-visible-guest="true" class="icon-heart-mask" href="/auth/login?redirect_to=${window.location.pathname}"></a>
              <img class="loader d-none" src="${storeConfig.asset_url}spinner.gif" width="20" height="20"/>
            </span>
          ` : ''}
          
          <div class="image-inner">
            <div class="image-inner-inner">
              <a class="image-link" style="display:block; width: 100%; height: 100%;">
                <img src="${firstImage.image?.full_size || firstImage.image?.large || ''}" 
                     class="carousel-img" 
                     alt="${firstImage.alt_text || product.name}"
                     id="main-product-image">
                ${firstImage.provider && firstImage.link ? `
                  <img id="main-video-icon"
                    class="play-icon"
                    src="${storeConfig.assetUrl('video-play.svg')}"
                    alt="play"
                    width="25"
                    onclick="showIframe(this, '${firstImage.link}')"
                  />
                ` : ''}
              </a>
              ${firstImage.provider && firstImage.link ? `
                <div class="iframe-video pt-1 d-none">
                  <a id="iframe-close-btn"
                    type="button"
                    class="text-white btn btn-none grow"
                    onclick="hideIframe(this)">
                    X
                  </a>
                  <iframe
                    width="100%"
                    height="100%"
                    src=""
                    frameborder="0"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
                    allowfullscreen
                    style="max-width: 100%">
                  </iframe>
                </div>
              ` : ''}
            </div>
            
            <div class="thumbnail-gallery-container">
              ${buildThumbnailGallery(media)}
            </div>
          </div>
        </div>

        <div class="details-side col-product-info ${media.length <= 1 ? 'col-product-info-single-image' : ''}">
          <div class="product-details-header">
            <a class="product-title" href="${product.html_url}">${product.name}</a>
            
            <div class="d-flex price-box align-center">
              <div class="d-flex align-items-center">
                <h2 class="product-formatted-price" id="product-price">
                  ${selectedProduct.formatted_sale_price || selectedProduct.formatted_price}
                </h2>
                <p id="discount-container" class="${selectedProduct.formatted_sale_price ? '' : 'd-none'}">
                  <span class="product-formatted-price-discount" id="product-discount">
                    &nbsp;&nbsp;خصم&nbsp;${selectedProduct.discount_percentage || product.discount_percentage || 0}%
                  </span>
                  <del class="product-formatted-price-old" id="product-old-price">
                    ${selectedProduct.formatted_price}
                  </del>
                </p>
              </div>
            </div>

            ${product.short_description ? `
              <div class="product-short-description">
                <label>${locals.description}</label>
                <div class="text-short-description">
                  ${product.short_description}
                </div>
              </div>
            ` : ''}
          </div>

          <form id="product-form">
            <input id="product-id" type="hidden" value="${selectedProduct.id}">
            <input id="product-parent-id" type="hidden" value="${product.id}">

            <div class="size-box">
              ${product.options ? `
                <div id="product-variants-options" class="product-variants-options">
                  ${buildVariantsSelect(product)}
                </div>
              ` : ''}
            </div>

            ${selectedProduct.is_infinite || selectedProduct.quantity > 0 ? `
              <div class="select-quantity-div">
                <h4 class="product-title">${locals.product_cart_quantity}</h4>
                <div class="form-group">
                  <div>
                    <select id="product-quantity" name="quantity" class="select-quantity">
                      ${buildQuantityOptions(selectedProduct)}
                    </select>
                  </div>
                </div>
              </div>
            ` : ''}
          </form>

          <div class="product-buttons ${selectedProduct.out_of_stock || selectedProduct.quantity <= 0 ? 'd-none' : 'd-block'}">
            <div class="align-center btn-add">
              <button class="btn btn-add-to-cart" type="button" onclick="productAddToCart()">
                <img class="add-to-cart-progress d-none" src="${storeConfig.asset_url}spinner.gif" width="25" height="25"/>
                <span>${locals.add_to_cart}</span>
              </button>
            </div>
          </div>

          <div>
            <span id="product-view-add-to-cart"></span>
          </div>
        </div>
      </div>
    </section>
  `;
}

// Fetch product and render
zid.store.product.fetch(productId)
  .then(function(response) {
    if (response.status === 'success' && response.data && response.data.product) {
      const product = response.data.product;
      currentProduct = product;
      console.log(product);
      // Get store config and locals
      const storeConfig = {
        is_wishlist_enabled: typeof store !== 'undefined' ? store.is_wishlist_enabled : true,
        asset_url: window.asset_url || '/assets/',
        assetUrl: window.assetUrl || function(path) { return '/assets/' + path; }
      };
      
      const locals = {
        description: "{% if session.lang.code == 'ar' %}الوصف :{% else %}Description :{% endif %}",
        product_discount: "{% if session.lang.code == 'ar' %}خصم{% else %}discount{% endif %}",
        product_cart_quantity: "{% if session.lang.code == 'ar' %}الكمية :{% else %}quantity :{% endif %}",
        add_to_cart: "{% if session.lang.code == 'ar' %}أضف للسلة{% else %} Add To Basket{% endif %}"
      };

      // Build and inject HTML
      const html = buildProductTemplate(product, locals, storeConfig);
      document.getElementById('product-container').innerHTML = html;

      
      
      // Initialize any required scripts after rendering
      if (typeof initProductScripts === 'function') {
        initProductScripts(product);
      }
    } else {
      console.error('تعذر تحميل بيانات المنتج.');
      document.getElementById('product-container').innerHTML = 
        '<div class="alert alert-danger">حدث خطأ في تحميل المنتج</div>';
    }
  })
  .catch(function(err) {
    console.error('API Error:', err);
    document.getElementById('product-container').innerHTML = 
      '<div class="alert alert-danger">حدث خطأ في الاتصال بالخادم</div>';
  });
</script>
{% endblock %}
